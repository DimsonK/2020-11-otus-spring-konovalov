{"version":3,"sources":["./src/app/services/book.service.ts","./src/app/store/book-store/book-store.module.ts","./src/app/store/comment-store/actions.ts","./src/app/services/genre.service.ts","./src/app/components/author-edit/author-edit.component.ts","./src/app/components/author-edit/author-edit.component.html","./src/app/store/root-store.module.ts","./src/environments/environment.ts","./src/app/store/book-store/state.ts","./src/app/store/book-store/actions.ts","./src/app/store/book-store/effects.ts","./src/app/store/genre-store/genre-store.module.ts","./src/app/components/books-tab/books-tab.component.ts","./src/app/components/books-tab/books-tab.component.html","./src/app/store/genre-store/actions.ts","./src/app/components/genres-tab/genres-tab.component.ts","./src/app/components/genres-tab/genres-tab.component.html","./src/app/store/comment-store/selectors.ts","./src/app/store/book-store/selectors.ts","./src/app/store/author-store/actions.ts","./src/app/components/genre-edit/genre-edit.component.ts","./src/app/components/genre-edit/genre-edit.component.html","./src/app/store/comment-store/state.ts","./src/app/store/author-store/index.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/store/author-store/author-store.module.ts","./src/app/store/genre-store/state.ts","./src/app/services/author.service.ts","./src/app/components/comments-tab/comments-tab.component.ts","./src/app/components/comments-tab/comments-tab.component.html","./src/app/pipes/extract-genre-name-property.pipe.ts","./src/app/store/comment-store/index.ts","./src/app/store/author-store/reducer.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/store/author-store/state.ts","./src/app/components/comment-edit/comment-edit.component.ts","./src/app/components/comment-edit/comment-edit.component.html","./src/app/app.module.ts","./src/app/store/author-store/selectors.ts","./src/app/components/manage-page/manage-page.component.ts","./src/app/components/manage-page/manage-page.component.html","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/store/genre-store/effects.ts","./src/app/store/comment-store/comment-store.module.ts","./src/app/store/genre-store/reducer.ts","./src/app/store/comment-store/effects.ts","./src/app/components/book-edit/book-edit.component.ts","./src/app/components/book-edit/book-edit.component.html","./src/app/store/genre-store/selectors.ts","./src/app/services/comment.service.ts","./src/app/components/authors-tab/authors-tab.component.ts","./src/app/components/authors-tab/authors-tab.component.html","./src/app/store/book-store/reducer.ts","./src/app/store/comment-store/reducer.ts","./src/app/app-routing.module.ts","./src/app/store/book-store/index.ts","./src/app/store/author-store/effects.ts","./src/app/components/books-view/books-view.component.ts","./src/app/components/books-view/books-view.component.html","./src/app/store/genre-store/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { BookModel } from '../models/book.model';\r\n\r\n@Injectable()\r\nexport class BookService {\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) {\r\n  }\r\n\r\n  public loadBooks(): Observable<BookModel[]> {\r\n    return this.http\r\n      .get<BookModel[]>('/api/book')\r\n      .pipe(map((data: BookModel[]) => data));\r\n  }\r\n\r\n  public loadBooksBySearch(search: string): Observable<BookModel[]> {\r\n    return this.http\r\n      .get<BookModel[]>('/api/book', {\r\n        params: {'search': search}\r\n      })\r\n      .pipe(map((data: BookModel[]) => data));\r\n  }\r\n\r\n  public loadBookById(payload: string): Observable<BookModel> {\r\n    return this.http\r\n      .get<BookModel>(`/api/book/${payload}`)\r\n      .pipe(map((data: BookModel) => data));\r\n  }\r\n\r\n  public createBook(payload: BookModel): Observable<BookModel> {\r\n    return this.http\r\n      .post<BookModel>('/api/book', payload)\r\n      .pipe(map((data: BookModel) => data));\r\n  }\r\n\r\n  public updateBook(payload: BookModel): Observable<BookModel> {\r\n    return this.http\r\n      .put<BookModel>(`/api/book/${payload.id}`, payload)\r\n      .pipe(map((data: BookModel) => data));\r\n  }\r\n\r\n  public deleteBook(payload: string) {\r\n    return this.http\r\n      .delete<string>(`/api/book/${payload}`)\r\n      .pipe(map((data: string) => data));\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { BookEffect } from './effects';\r\nimport { bookReducer } from './reducer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StoreModule.forFeature('books', bookReducer),\r\n    EffectsModule.forFeature([BookEffect]),\r\n  ],\r\n  providers: [BookEffect],\r\n})\r\nexport class BookStoreModule {\r\n}\r\n","import { Update } from '@ngrx/entity';\r\nimport { Action } from '@ngrx/store';\r\n\r\nimport { CommentModel } from '../../models/comment.model';\r\n\r\n\r\nexport enum CommentActionTypes {\r\n  LOAD_COMMENTS_BY_BOOK_ID = '[Comment/API Load Comments by book id Request',\r\n  LOAD_COMMENTS_BY_BOOK_ID_SUCCESS = '[Comment/API Load Comments by book id Success',\r\n  LOAD_COMMENTS_BY_BOOK_ID_FAIL = '[Comment/API Load Comments by book id Failure',\r\n  LOAD_COMMENT = '[Comment/API Load Comment Request',\r\n  LOAD_COMMENT_SUCCESS = '[Comment/API Load Comment Success',\r\n  LOAD_COMMENT_FAIL = '[Comment/API Load Comment Failure',\r\n  CREATE_COMMENT = '[Comment/API Create Comment Request',\r\n  CREATE_COMMENT_SUCCESS = '[Comment/API Create Comment Success',\r\n  CREATE_COMMENT_FAIL = '[Comment/API Create Comment Failure',\r\n  UPDATE_COMMENT = '[Comment/API Update Comment Request',\r\n  UPDATE_COMMENT_SUCCESS = '[Comment/API Update Comment Success',\r\n  UPDATE_COMMENT_FAIL = '[Comment/API Update Comment Failure',\r\n  DELETE_COMMENT = '[Comment/API Delete Comment Request',\r\n  DELETE_COMMENT_SUCCESS = '[Comment/API Delete Comment Success',\r\n  DELETE_COMMENT_FAIL = '[Comment/API Delete Comment Failure',\r\n}\r\n\r\nexport class LoadComments implements Action {\r\n  readonly type = CommentActionTypes.LOAD_COMMENTS_BY_BOOK_ID;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class LoadCommentsSuccess implements Action {\r\n  readonly type = CommentActionTypes.LOAD_COMMENTS_BY_BOOK_ID_SUCCESS;\r\n\r\n  constructor(public payload: CommentModel[]) {\r\n  }\r\n}\r\n\r\nexport class LoadCommentsFail implements Action {\r\n  readonly type = CommentActionTypes.LOAD_COMMENTS_BY_BOOK_ID_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class LoadComment implements Action {\r\n  readonly type = CommentActionTypes.LOAD_COMMENT;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class LoadCommentSuccess implements Action {\r\n  readonly type = CommentActionTypes.LOAD_COMMENT_SUCCESS;\r\n\r\n  constructor(public payload: CommentModel) {\r\n  }\r\n}\r\n\r\nexport class LoadCommentFail implements Action {\r\n  readonly type = CommentActionTypes.LOAD_COMMENT_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class CreateComment implements Action {\r\n  readonly type = CommentActionTypes.CREATE_COMMENT;\r\n\r\n  constructor(public payload: CommentModel) {\r\n  }\r\n}\r\n\r\nexport class CreateCommentSuccess implements Action {\r\n  readonly type = CommentActionTypes.CREATE_COMMENT_SUCCESS;\r\n\r\n  constructor(public payload: CommentModel) {\r\n  }\r\n}\r\n\r\nexport class CreateCommentFail implements Action {\r\n  readonly type = CommentActionTypes.CREATE_COMMENT_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class UpdateComment implements Action {\r\n  readonly type = CommentActionTypes.UPDATE_COMMENT;\r\n\r\n  constructor(public payload: CommentModel) {\r\n  }\r\n}\r\n\r\nexport class UpdateCommentSuccess implements Action {\r\n  readonly type = CommentActionTypes.UPDATE_COMMENT_SUCCESS;\r\n\r\n  constructor(public payload: Update<CommentModel>) {\r\n  }\r\n}\r\n\r\nexport class UpdateCommentFail implements Action {\r\n  readonly type = CommentActionTypes.UPDATE_COMMENT_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class DeleteComment implements Action {\r\n  readonly type = CommentActionTypes.DELETE_COMMENT;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class DeleteCommentSuccess implements Action {\r\n  readonly type = CommentActionTypes.DELETE_COMMENT_SUCCESS;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class DeleteCommentFail implements Action {\r\n  readonly type = CommentActionTypes.DELETE_COMMENT_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport type Actions =\r\n  | LoadComments\r\n  | LoadCommentsSuccess\r\n  | LoadCommentsFail\r\n  | LoadComment\r\n  | LoadCommentSuccess\r\n  | LoadCommentFail\r\n  | CreateComment\r\n  | CreateCommentSuccess\r\n  | CreateCommentFail\r\n  | UpdateComment\r\n  | UpdateCommentSuccess\r\n  | UpdateCommentFail\r\n  | DeleteComment\r\n  | DeleteCommentSuccess\r\n  | DeleteCommentFail;\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { GenreModel } from '../models/genre.model';\r\n\r\n@Injectable()\r\nexport class GenreService {\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) {\r\n  }\r\n\r\n  public loadGenres(): Observable<GenreModel[]> {\r\n    return this.http\r\n      .get<GenreModel[]>('/api/genre')\r\n      .pipe(map((data: GenreModel[]) => data));\r\n  }\r\n\r\n  public loadGenreById(payload: string): Observable<GenreModel> {\r\n    return this.http\r\n      .get<GenreModel>(`/api/genre/${payload}`)\r\n      .pipe(map((data: GenreModel) => data));\r\n  }\r\n\r\n  public createGenre(payload: GenreModel): Observable<GenreModel> {\r\n    return this.http\r\n      .post<GenreModel>('/api/genre', payload)\r\n      .pipe(map((data: GenreModel) => data));\r\n  }\r\n\r\n  public updateGenre(payload: GenreModel): Observable<GenreModel> {\r\n    return this.http\r\n      .put<GenreModel>(`/api/genre/${payload.id}`, payload)\r\n      .pipe(map((data: GenreModel) => data));\r\n  }\r\n\r\n  public deleteGenre(payload: string) {\r\n    return this.http\r\n      .delete<string>(`/api/genre/${payload}`)\r\n      .pipe(map((data: string) => data));\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NGXLogger } from 'ngx-logger';\nimport { Subscription } from 'rxjs';\nimport { AuthorModel } from '../../models/author.model';\n\n@Component({\n  selector: 'app-author-edit',\n  templateUrl: './author-edit.component.html',\n  styleUrls: ['./author-edit.component.css']\n})\nexport class AuthorEditComponent implements OnInit, OnDestroy {\n  @Input() public display = false;\n  @Input() public author: AuthorModel | null = null;\n  @Output() public displayChange = new EventEmitter<boolean>();\n  @Output() public authorChange = new EventEmitter<AuthorModel>();\n\n  public dialogHeader = '';\n  public submitted = false;\n  private subscriptions: Subscription = new Subscription();\n\n  public authorEditForm: FormGroup = new FormGroup({\n    id: new FormControl(''),\n    authorName: new FormControl('', Validators.required),\n  });\n\n  constructor(\n    private logger: NGXLogger\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  onDisplayChange(val: boolean) {\n    if (this.display) {\n      if (this.author) {\n        this.logger.info(`onDisplayChange: ${JSON.stringify(this.author)}`);\n\n        this.dialogHeader = 'Редактировать автора';\n        this.authorEditForm.patchValue({\n          id: this.author && this.author.id ? this.author.id : null,\n          authorName: this.author.name,\n        });\n      } else {\n        this.dialogHeader = 'Добавить автора';\n        this.authorEditForm.patchValue({\n          id: null,\n          authorName: ''\n        });\n      }\n    }\n    this.submitted = false;\n    this.display = val;\n    this.displayChange.emit(val);\n  }\n\n  onAuthorChange() {\n    this.submitted = true;\n    const nameField = this.authorEditForm.get('authorName');\n    const updateAuthor: AuthorModel = {\n      id: this.author ? this.author.id : '0',\n      name: nameField?.value,\n    };\n    if (this.authorEditForm.valid) {\n      this.author = updateAuthor;\n      this.authorChange.emit(updateAuthor);\n      this.display = false;\n    }\n  }\n}\n","<p-dialog [(visible)]=\"display\" header=\"{{dialogHeader}}\" modal=\"true\" (onShow)=\"onDisplayChange(true)\"\n          (onHide)=\"onDisplayChange(false)\">\n  <div class=\"dialog\">\n    <form [formGroup]=\"authorEditForm\" (submit)=\"onAuthorChange()\" class=\"form-inline\">\n      <label class=\"label\" for=\"fldAuthorName\">Имя автора *</label>\n      <div class=\"ui-inputgroup\">\n        <input\n          class=\"input-text\"\n          pInputText type=\"text\"\n          id=\"fldAuthorName\"\n          formControlName=\"authorName\"\n          placeholder=\"Имя автора\"\n          pTooltip=\"Введите имя автора\">\n      </div>\n      <div *ngIf=\"submitted && authorEditForm.controls['authorName'].invalid &&\n        (authorEditForm.controls['authorName'].dirty || authorEditForm.controls['authorName'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"authorEditForm.controls['authorName'].errors.required\"></div>\n      </div>\n\n      <div class=\"btn-blk\">\n        <p-button\n          class=\"button\"\n          type=\"submit\"\n          label=\"Сохранить\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          [disabled]=\"!authorEditForm.valid\">\n        </p-button>\n        <p-button\n          class=\"button\"\n          type=\"button\"\n          (onClick)=\"onDisplayChange(false)\"\n          label=\"Отмена\"\n          icon=\"pi pi-times\"\n          iconPos=\"right\">\n        </p-button>\n      </div>\n    </form>\n  </div>\n</p-dialog>\n","import { NgModule } from '@angular/core';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthorStoreModule } from './author-store';\r\nimport { BookStoreModule } from './book-store';\r\nimport { CommentStoreModule } from './comment-store';\r\nimport { GenreStoreModule } from './genre-store';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AuthorStoreModule,\r\n    BookStoreModule,\r\n    CommentStoreModule,\r\n    GenreStoreModule,\r\n    StoreModule.forRoot(\r\n      {},\r\n      {\r\n        runtimeChecks: {\r\n          strictStateImmutability: true,\r\n          strictActionImmutability: true,\r\n          strictStateSerializability: true,\r\n          strictActionSerializability: true,\r\n        },\r\n      }\r\n    ),\r\n    EffectsModule.forRoot([]),\r\n    StoreDevtoolsModule.instrument({\r\n      maxAge: 25, // Retains last 25 states\r\n      logOnly: environment.production, // Restrict extension to logs-only mode\r\n    }),\r\n  ],\r\n  declarations: [],\r\n})\r\nexport class RootStoreModule {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { BookModel } from '../../models/book.model';\r\n\r\nexport interface BookState extends EntityState<BookModel> {\r\n  selectedBookId: string | null;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  error: string;\r\n}\r\n\r\nexport const bookAdapter: EntityAdapter<BookModel> = createEntityAdapter<BookModel>();\r\n\r\nexport const initialBookState: BookState = bookAdapter.getInitialState(\r\n  {\r\n    ids: [],\r\n    entities: {},\r\n    selectedBookId: null,\r\n    loading: false,\r\n    loaded: false,\r\n    error: '',\r\n  }\r\n);\r\n","import { Update } from '@ngrx/entity';\r\nimport { Action } from '@ngrx/store';\r\n\r\nimport { BookModel } from '../../models/book.model';\r\n\r\n\r\nexport enum BookActionTypes {\r\n  LOAD_BOOKS = '[Book/API Load Books Request',\r\n  LOAD_BOOKS_SUCCESS = '[Book/API Load Books Success',\r\n  LOAD_BOOKS_FAIL = '[Book/API Load Books Failure',\r\n  LOAD_BOOKS_LIKE_NAME = '[Book/API Load Books like name Request',\r\n  LOAD_BOOKS_LIKE_NAME_SUCCESS = '[Book/API Load Books like name Success',\r\n  LOAD_BOOKS_LIKE_NAME_FAIL = '[Book/API Load Books like name Failure',\r\n  LOAD_BOOK = '[Book/API Load Book Request',\r\n  LOAD_BOOK_SUCCESS = '[Book/API Load Book Success',\r\n  LOAD_BOOK_FAIL = '[Book/API Load Book Failure',\r\n  CREATE_BOOK = '[Book/API Create Book Request',\r\n  CREATE_BOOK_SUCCESS = '[Book/API Create Book Success',\r\n  CREATE_BOOK_FAIL = '[Book/API Create Book Failure',\r\n  UPDATE_BOOK = '[Book/API Update Book Request',\r\n  UPDATE_BOOK_SUCCESS = '[Book/API Update Book Success',\r\n  UPDATE_BOOK_FAIL = '[Book/API Update Book Failure',\r\n  DELETE_BOOK = '[Book/API Delete Book Request',\r\n  DELETE_BOOK_SUCCESS = '[Book/API Delete Book Success',\r\n  DELETE_BOOK_FAIL = '[Book/API Delete Book Failure',\r\n}\r\n\r\nexport class LoadBooks implements Action {\r\n  readonly type = BookActionTypes.LOAD_BOOKS;\r\n}\r\n\r\nexport class LoadBooksSuccess implements Action {\r\n  readonly type = BookActionTypes.LOAD_BOOKS_SUCCESS;\r\n\r\n  constructor(public payload: BookModel[]) {\r\n  }\r\n}\r\n\r\nexport class LoadBooksFail implements Action {\r\n  readonly type = BookActionTypes.LOAD_BOOKS_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class LoadBooksLikeName implements Action {\r\n  readonly type = BookActionTypes.LOAD_BOOKS_LIKE_NAME;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class LoadBooksLikeNameSuccess implements Action {\r\n  readonly type = BookActionTypes.LOAD_BOOKS_LIKE_NAME_SUCCESS;\r\n\r\n  constructor(public payload: BookModel[]) {\r\n  }\r\n}\r\n\r\nexport class LoadBooksLikeNameFail implements Action {\r\n  readonly type = BookActionTypes.LOAD_BOOKS_LIKE_NAME_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n\r\n//\r\nexport class LoadBook implements Action {\r\n  readonly type = BookActionTypes.LOAD_BOOK;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class LoadBookSuccess implements Action {\r\n  readonly type = BookActionTypes.LOAD_BOOK_SUCCESS;\r\n\r\n  constructor(public payload: BookModel) {\r\n  }\r\n}\r\n\r\nexport class LoadBookFail implements Action {\r\n  readonly type = BookActionTypes.LOAD_BOOK_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class CreateBook implements Action {\r\n  readonly type = BookActionTypes.CREATE_BOOK;\r\n\r\n  constructor(public payload: BookModel) {\r\n  }\r\n}\r\n\r\nexport class CreateBookSuccess implements Action {\r\n  readonly type = BookActionTypes.CREATE_BOOK_SUCCESS;\r\n\r\n  constructor(public payload: BookModel) {\r\n  }\r\n}\r\n\r\nexport class CreateBookFail implements Action {\r\n  readonly type = BookActionTypes.CREATE_BOOK_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class UpdateBook implements Action {\r\n  readonly type = BookActionTypes.UPDATE_BOOK;\r\n\r\n  constructor(public payload: BookModel) {\r\n  }\r\n}\r\n\r\nexport class UpdateBookSuccess implements Action {\r\n  readonly type = BookActionTypes.UPDATE_BOOK_SUCCESS;\r\n\r\n  constructor(public payload: Update<BookModel>) {\r\n  }\r\n}\r\n\r\nexport class UpdateBookFail implements Action {\r\n  readonly type = BookActionTypes.UPDATE_BOOK_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class DeleteBook implements Action {\r\n  readonly type = BookActionTypes.DELETE_BOOK;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class DeleteBookSuccess implements Action {\r\n  readonly type = BookActionTypes.DELETE_BOOK_SUCCESS;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class DeleteBookFail implements Action {\r\n  readonly type = BookActionTypes.DELETE_BOOK_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport type Actions =\r\n  | LoadBooks\r\n  | LoadBooksSuccess\r\n  | LoadBooksFail\r\n  | LoadBooksLikeName\r\n  | LoadBooksLikeNameSuccess\r\n  | LoadBooksLikeNameFail\r\n  | LoadBook\r\n  | LoadBookSuccess\r\n  | LoadBookFail\r\n  | CreateBook\r\n  | CreateBookSuccess\r\n  | CreateBookFail\r\n  | UpdateBook\r\n  | UpdateBookSuccess\r\n  | UpdateBookFail\r\n  | DeleteBook\r\n  | DeleteBookSuccess\r\n  | DeleteBookFail;\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, mergeMap } from 'rxjs/operators';\r\nimport { BookModel } from '../../models/book.model';\r\n\r\nimport { BookService } from '../../services/book.service';\r\nimport * as bookActions from './actions';\r\n\r\n@Injectable()\r\nexport class BookEffect {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private bookService: BookService\r\n  ) {\r\n  }\r\n\r\n  @Effect()\r\n  loadBooks$: Observable<Action> = this.actions$.pipe(\r\n    ofType<bookActions.LoadBooks>(\r\n      bookActions.BookActionTypes.LOAD_BOOKS\r\n    ),\r\n    mergeMap((action: bookActions.LoadBooks) =>\r\n      this.bookService.loadBooks().pipe(\r\n        map(\r\n          (books: BookModel[]) =>\r\n            new bookActions.LoadBooksSuccess(books)\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new bookActions.LoadBooksFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  loadBook$: Observable<Action> = this.actions$.pipe(\r\n    ofType<bookActions.LoadBook>(\r\n      bookActions.BookActionTypes.LOAD_BOOK\r\n    ),\r\n    mergeMap((action: bookActions.LoadBook) =>\r\n      this.bookService.loadBookById(action.payload).pipe(\r\n        map(\r\n          (book: BookModel) =>\r\n            new bookActions.LoadBookSuccess(book)\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new bookActions.LoadBookFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  createBook$: Observable<Action> = this.actions$.pipe(\r\n    ofType<bookActions.CreateBook>(\r\n      bookActions.BookActionTypes.CREATE_BOOK\r\n    ),\r\n    map((action: bookActions.CreateBook) => action.payload),\r\n    mergeMap((book: BookModel) =>\r\n      this.bookService.createBook(book).pipe(\r\n        map(\r\n          (newBook: BookModel) =>\r\n            new bookActions.CreateBookSuccess(newBook)\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new bookActions.CreateBookFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  updateBook$: Observable<Action> = this.actions$.pipe(\r\n    ofType<bookActions.UpdateBook>(\r\n      bookActions.BookActionTypes.UPDATE_BOOK\r\n    ),\r\n    map((action: bookActions.UpdateBook) => action.payload),\r\n    mergeMap((book: BookModel) =>\r\n      this.bookService.updateBook(book).pipe(\r\n        map(\r\n          (updateBook: BookModel) =>\r\n            new bookActions.UpdateBookSuccess({\r\n              id: updateBook.id,\r\n              changes: updateBook,\r\n            })\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new bookActions.UpdateBookFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  deleteBook$: Observable<Action> = this.actions$.pipe(\r\n    ofType<bookActions.DeleteBook>(\r\n      bookActions.BookActionTypes.DELETE_BOOK\r\n    ),\r\n    map((action: bookActions.DeleteBook) => action.payload),\r\n    mergeMap((id: string) =>\r\n      this.bookService.deleteBook(id).pipe(\r\n        map(() => new bookActions.DeleteBookSuccess(id)),\r\n        catchError((err) =>\r\n          of(\r\n            new bookActions.DeleteBookFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { GenreEffect } from './effects';\r\nimport { genreReducer } from './reducer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StoreModule.forFeature('genres', genreReducer),\r\n    EffectsModule.forFeature([GenreEffect]),\r\n  ],\r\n  providers: [GenreEffect],\r\n})\r\nexport class GenreStoreModule {\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { NGXLogger } from 'ngx-logger';\nimport { MessageService } from 'primeng/api';\nimport { Observable, Subscription } from 'rxjs';\nimport { AuthorModel } from '../../models/author.model';\nimport { BookModel } from '../../models/book.model';\nimport { GenreModel } from '../../models/genre.model';\nimport * as authorStore from '../../store/author-store';\n\nimport * as bookStore from '../../store/book-store';\nimport * as genreStore from '../../store/genre-store';\n\n@Component({\n  selector: 'app-books-tab',\n  templateUrl: './books-tab.component.html',\n  styleUrls: ['./books-tab.component.css']\n})\nexport class BooksTabComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription = new Subscription();\n\n  public displayEditBookDialog = false;\n  public selectedBook: BookModel | null = null;\n  public tmpBook: BookModel | null = null;\n\n  public books: BookModel[] = [];\n  public authors: AuthorModel[] = [];\n  public genres: GenreModel[] = [];\n\n  public action: 'ADD' | 'EDIT' | null = null;\n  public delAction: 'delBook' | null = null;\n\n  constructor(\n    private bookStore$: Store<bookStore.BookStoreState.BookState>,\n    private authorStore$: Store<authorStore.AuthorStoreState.AuthorState>,\n    private genreStore$: Store<genreStore.GenreStoreState.GenreState>,\n    private messageService: MessageService,\n    private logger: NGXLogger\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.onError(\n      this.bookStore$.pipe(\n        select(bookStore.BookStoreSelectors.getError)\n      )\n    );\n    this.onError(\n      this.authorStore$.pipe(\n        select(authorStore.AuthorStoreSelectors.getError)\n      )\n    );\n    this.onError(\n      this.genreStore$.pipe(\n        select(genreStore.GenreStoreSelectors.getError)\n      )\n    );\n    this.subscriptions.add(\n      this.bookStore$\n        .select(bookStore.BookStoreSelectors.getBooks)\n        .subscribe((data) => {\n          this.books = data;\n        })\n    );\n    this.subscriptions.add(\n      this.authorStore$\n        .select(authorStore.AuthorStoreSelectors.getAuthors)\n        .subscribe((data) => {\n          this.authors = data;\n        })\n    );\n    this.subscriptions.add(\n      this.genreStore$\n        .select(genreStore.GenreStoreSelectors.getGenres)\n        .subscribe((data) => {\n          this.genres = data;\n        })\n    );\n    this.bookStore$.dispatch(\n      new bookStore.BookStoreActions.LoadBooks()\n    );\n    this.authorStore$.dispatch(\n      new authorStore.AuthorStoreActions.LoadAuthors()\n    );\n    this.genreStore$.dispatch(\n      new genreStore.GenreStoreActions.LoadGenres()\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  // ------------------------------------------------------------------------------\n  addBook() {\n    this.action = 'ADD';\n    this.tmpBook = null;\n    this.displayEditBookDialog = true;\n  }\n\n  editBook(book: BookModel) {\n    if (!book) {\n      this.action = 'ADD';\n    } else {\n      this.action = 'EDIT';\n    }\n    this.selectedBook = book;\n    this.tmpBook = book;\n    this.displayEditBookDialog = true;\n  }\n\n  saveBookChanges(book: BookModel) {\n    this.logger.info(`saveBookChanges: ${book}`);\n    if (this.action === 'ADD') {\n      this.bookStore$.dispatch(\n        new bookStore.BookStoreActions.CreateBook(book)\n      );\n    } else {\n      this.bookStore$.dispatch(\n        new bookStore.BookStoreActions.UpdateBook(book)\n      );\n    }\n  }\n\n  deleteBook(book: BookModel) {\n    this.tmpBook = book;\n    this.delAction = 'delBook';\n    this.messageService.clear();\n    this.messageService.add({\n      key: 'delConfirmDialog',\n      sticky: true,\n      severity: 'warn',\n      summary: 'Вы уверены?',\n      detail: 'Подтвердите удаление книги',\n    });\n  }\n\n  // ------------------------------------------------------------------------------\n  // Confirmation\n  onConfirm(action: string | null) {\n    if (this.tmpBook) {\n      this.bookStore$.dispatch(\n        new bookStore.BookStoreActions.DeleteBook(this.tmpBook.id)\n      );\n    }\n    this.messageService.clear('delConfirmDialog');\n  }\n\n  onReject() {\n    this.messageService.clear('delConfirmDialog');\n  }\n\n  onRowSelect(event: any) {\n    this.messageService.add({severity: 'info', summary: 'Product Selected', detail: event.data.name});\n  }\n\n  onError(errorFlow$: Observable<any>) {\n    this.subscriptions.add(\n      errorFlow$.subscribe((err) => {\n        if (err && err.length > 0) {\n          this.messageService.add({\n            key: 'serviceError',\n            severity: 'error',\n            summary: 'Ошибка сервиса',\n            detail: err.toString(),\n            closable: true,\n          });\n        }\n      })\n    );\n  }\n}\n","<div class=\"book-table\">\n  <p-table [value]=\"books\" selectionMode=\"single\" [(selection)]=\"selectedBook\" dataKey=\"id\"\n           (onRowSelect)=\"onRowSelect($event)\">\n    <ng-template pTemplate=\"caption\">\n      <div class=\"table-header\">\n        <div style=\"text-align: right\">\n          <p-button icon=\"pi pi-plus\" (onClick)=\"addBook()\"></p-button>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th scope=\"col\" style=\"width: 5%\">ID</th>\n        <th scope=\"col\" style=\"width: 35%\">Book Name</th>\n        <th scope=\"col\" style=\"width: 30%\">Author Name</th>\n        <th scope=\"col\" style=\"width: 20%\">Genre</th>\n        <th scope=\"col\" style=\"width: 10%\">Manage</th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-book>\n      <tr>\n        <td>{{book.id}}</td>\n        <td>{{book.name}}</td>\n        <td>{{book.author.name}}</td>\n        <td>{{book.genres | extractGenreNameProperty}}</td>\n        <td style=\"text-align: center; display: flex\">\n          <p-button class=\"table-button\" icon=\"pi pi-ellipsis-h\" (onClick)=\"editBook(book)\"></p-button>\n          <p-button class=\"table-button\" icon=\"pi pi-times\" (onClick)=\"deleteBook(book)\"></p-button>\n        </td>\n      </tr>\n    </ng-template>\n  </p-table>\n</div>\n\n<app-book-edit\n  [(display)]=\"displayEditBookDialog\"\n  [(book)]=\"tmpBook\"\n  [authors]=\"authors\"\n  [genres]=\"genres\"\n  (bookChange)=\"saveBookChanges($event)\">\n</app-book-edit>\n\n<p-toast position=\"center\" key=\"delConfirmDialog\" (onClose)=\"onReject()\" [baseZIndex]=\"5000\">\n  <ng-template let-message pTemplate=\"message\">\n    <div class=\"p-flex p-flex-column\" style=\"flex: 1\">\n      <div style=\"text-align: center\">\n        <em class=\"pi pi-exclamation-triangle\" style=\"font-size: 3em\"></em>\n        <h3>{{message.summary}}</h3>\n        <p>{{message.detail}}</p>\n      </div>\n      <div class=\"p-grid p-fluid\">\n        <div class=\"p-col-6\">\n          <button type=\"button\" pButton (click)=\"onConfirm(delAction)\" label=\"Да\" class=\"p-button-success\"></button>\n        </div>\n        <div class=\"p-col-6\">\n          <button type=\"button\" pButton (click)=\"onReject()\" label=\"Нет\" class=\"p-button-secondary\"></button>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</p-toast>\n\n<p-toast position=\"center\" key=\"serviceError\" [baseZIndex]=\"5000\"></p-toast>\n","import { Update } from '@ngrx/entity';\r\nimport { Action } from '@ngrx/store';\r\n\r\nimport { GenreModel } from '../../models/genre.model';\r\n\r\n\r\nexport enum GenreActionTypes {\r\n  LOAD_GENRES = '[Genre/API Load Genres Request',\r\n  LOAD_GENRES_SUCCESS = '[Genre/API Load Genres Success',\r\n  LOAD_GENRES_FAIL = '[Genre/API Load Genres Failure',\r\n  LOAD_GENRE = '[Genre/API Load Genre Request',\r\n  LOAD_GENRE_SUCCESS = '[Genre/API Load Genre Success',\r\n  LOAD_GENRE_FAIL = '[Genre/API Load Genre Failure',\r\n  CREATE_GENRE = '[Genre/API Create Genre Request',\r\n  CREATE_GENRE_SUCCESS = '[Genre/API Create Genre Success',\r\n  CREATE_GENRE_FAIL = '[Genre/API Create Genre Failure',\r\n  UPDATE_GENRE = '[Genre/API Update Genre Request',\r\n  UPDATE_GENRE_SUCCESS = '[Genre/API Update Genre Success',\r\n  UPDATE_GENRE_FAIL = '[Genre/API Update Genre Failure',\r\n  DELETE_GENRE = '[Genre/API Delete Genre Request',\r\n  DELETE_GENRE_SUCCESS = '[Genre/API Delete Genre Success',\r\n  DELETE_GENRE_FAIL = '[Genre/API Delete Genre Failure',\r\n}\r\n\r\nexport class LoadGenres implements Action {\r\n  readonly type = GenreActionTypes.LOAD_GENRES;\r\n}\r\n\r\nexport class LoadGenresSuccess implements Action {\r\n  readonly type = GenreActionTypes.LOAD_GENRES_SUCCESS;\r\n\r\n  constructor(public payload: GenreModel[]) {\r\n  }\r\n}\r\n\r\nexport class LoadGenresFail implements Action {\r\n  readonly type = GenreActionTypes.LOAD_GENRES_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class LoadGenre implements Action {\r\n  readonly type = GenreActionTypes.LOAD_GENRE;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class LoadGenreSuccess implements Action {\r\n  readonly type = GenreActionTypes.LOAD_GENRE_SUCCESS;\r\n\r\n  constructor(public payload: GenreModel) {\r\n  }\r\n}\r\n\r\nexport class LoadGenreFail implements Action {\r\n  readonly type = GenreActionTypes.LOAD_GENRE_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class CreateGenre implements Action {\r\n  readonly type = GenreActionTypes.CREATE_GENRE;\r\n\r\n  constructor(public payload: GenreModel) {\r\n  }\r\n}\r\n\r\nexport class CreateGenreSuccess implements Action {\r\n  readonly type = GenreActionTypes.CREATE_GENRE_SUCCESS;\r\n\r\n  constructor(public payload: GenreModel) {\r\n  }\r\n}\r\n\r\nexport class CreateGenreFail implements Action {\r\n  readonly type = GenreActionTypes.CREATE_GENRE_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class UpdateGenre implements Action {\r\n  readonly type = GenreActionTypes.UPDATE_GENRE;\r\n\r\n  constructor(public payload: GenreModel) {\r\n  }\r\n}\r\n\r\nexport class UpdateGenreSuccess implements Action {\r\n  readonly type = GenreActionTypes.UPDATE_GENRE_SUCCESS;\r\n\r\n  constructor(public payload: Update<GenreModel>) {\r\n  }\r\n}\r\n\r\nexport class UpdateGenreFail implements Action {\r\n  readonly type = GenreActionTypes.UPDATE_GENRE_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class DeleteGenre implements Action {\r\n  readonly type = GenreActionTypes.DELETE_GENRE;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class DeleteGenreSuccess implements Action {\r\n  readonly type = GenreActionTypes.DELETE_GENRE_SUCCESS;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class DeleteGenreFail implements Action {\r\n  readonly type = GenreActionTypes.DELETE_GENRE_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport type Actions =\r\n  | LoadGenres\r\n  | LoadGenresSuccess\r\n  | LoadGenresFail\r\n  | LoadGenre\r\n  | LoadGenreSuccess\r\n  | LoadGenreFail\r\n  | CreateGenre\r\n  | CreateGenreSuccess\r\n  | CreateGenreFail\r\n  | UpdateGenre\r\n  | UpdateGenreSuccess\r\n  | UpdateGenreFail\r\n  | DeleteGenre\r\n  | DeleteGenreSuccess\r\n  | DeleteGenreFail;\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { NGXLogger } from 'ngx-logger';\nimport { MessageService } from 'primeng/api';\nimport { Observable, Subscription } from 'rxjs';\nimport { GenreModel } from '../../models/genre.model';\nimport * as genreStore from '../../store/genre-store';\n\n@Component({\n  selector: 'app-genres-tab',\n  templateUrl: './genres-tab.component.html',\n  styleUrls: ['./genres-tab.component.css']\n})\nexport class GenresTabComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription = new Subscription();\n\n  public displayEditGenreDialog = false;\n  public selectedGenre: GenreModel | null = null;\n  public tmpGenre: GenreModel | null = null;\n\n  public genres: GenreModel[] = [];\n\n  public action: 'ADD' | 'EDIT' | null = null;\n  public delAction: 'delGenre' | null = null;\n\n  constructor(\n    private genreStore$: Store<genreStore.GenreStoreState.GenreState>,\n    private messageService: MessageService,\n    private logger: NGXLogger,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.onError(\n      this.genreStore$.pipe(\n        select(genreStore.GenreStoreSelectors.getError)\n      )\n    );\n    this.subscriptions.add(\n      this.genreStore$\n        .select(genreStore.GenreStoreSelectors.getGenres)\n        .subscribe((data) => {\n          this.genres = data;\n        })\n    );\n    this.genreStore$.dispatch(\n      new genreStore.GenreStoreActions.LoadGenres()\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  // ------------------------------------------------------------------------------\n  addGenre() {\n    this.action = 'ADD';\n    this.tmpGenre = null;\n    this.displayEditGenreDialog = true;\n  }\n\n  editGenre(genre: GenreModel) {\n    if (!genre) {\n      this.action = 'ADD';\n    } else {\n      this.action = 'EDIT';\n    }\n    this.selectedGenre = genre;\n    this.tmpGenre = genre;\n    this.displayEditGenreDialog = true;\n  }\n\n  saveGenreChanges(genre: GenreModel) {\n    this.logger.info(`saveGenreChanges: ${genre}`);\n    if (this.action === 'ADD') {\n      this.genreStore$.dispatch(\n        new genreStore.GenreStoreActions.CreateGenre(genre)\n      );\n    } else {\n      this.genreStore$.dispatch(\n        new genreStore.GenreStoreActions.UpdateGenre(genre)\n      );\n    }\n  }\n\n  deleteGenre(genre: GenreModel) {\n    this.tmpGenre = genre;\n    this.delAction = 'delGenre';\n    this.messageService.clear();\n    this.messageService.add({\n      key: 'delConfirmDialog',\n      sticky: true,\n      severity: 'warn',\n      summary: 'Вы уверены?',\n      detail: 'Подтвердите удаление жанра',\n    });\n  }\n\n  // ------------------------------------------------------------------------------\n  // Confirmation\n  onConfirm(action: string | null) {\n    if (this.tmpGenre) {\n      this.genreStore$.dispatch(\n        new genreStore.GenreStoreActions.DeleteGenre(this.tmpGenre.id)\n      );\n    }\n    this.messageService.clear('delConfirmDialog');\n  }\n\n  onReject() {\n    this.messageService.clear('delConfirmDialog');\n  }\n\n  onError(errorFlow$: Observable<any>) {\n    this.subscriptions.add(\n      errorFlow$.subscribe((err) => {\n        if (err && err.length > 0) {\n          this.messageService.add({\n            key: 'serviceError',\n            severity: 'error',\n            summary: 'Ошибка сервиса',\n            detail: err.toString(),\n            closable: true,\n          });\n        }\n      })\n    );\n  }\n}\n","<div class=\"genre-table\">\n  <p-table [value]=\"genres\" dataKey=\"id\">\n    <ng-template pTemplate=\"caption\">\n      <div class=\"table-header\">\n        <div style=\"text-align: right\">\n          <p-button icon=\"pi pi-plus\" (onClick)=\"addGenre()\"></p-button>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th scope=\"col\" style=\"width: 5%\">ID</th>\n        <th scope=\"col\" style=\"width: 85%\">Genre Name</th>\n        <th scope=\"col\" style=\"width: 10%\">Manage</th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-genre>\n      <tr>\n        <td>{{genre.id}}</td>\n        <td>{{genre.name}}</td>\n        <td style=\"text-align: center; display: flex\">\n          <p-button class=\"table-button\" icon=\"pi pi-ellipsis-h\" (onClick)=\"editGenre(genre)\"></p-button>\n          <p-button class=\"table-button\" icon=\"pi pi-times\" (onClick)=\"deleteGenre(genre)\"></p-button>\n        </td>\n      </tr>\n    </ng-template>\n  </p-table>\n</div>\n\n<app-genre-edit\n  [(display)]=\"displayEditGenreDialog\"\n  [(genre)]=\"tmpGenre\"\n  (genreChange)=\"saveGenreChanges($event)\">\n</app-genre-edit>\n\n<p-toast position=\"center\" key=\"delConfirmDialog\" (onClose)=\"onReject()\" [baseZIndex]=\"5000\">\n  <ng-template let-message pTemplate=\"message\">\n    <div class=\"p-flex p-flex-column\" style=\"flex: 1\">\n      <div style=\"text-align: center\">\n        <em class=\"pi pi-exclamation-triangle\" style=\"font-size: 3em\"></em>\n        <h3>{{message.summary}}</h3>\n        <p>{{message.detail}}</p>\n      </div>\n      <div class=\"p-grid p-fluid\">\n        <div class=\"p-col-6\">\n          <button type=\"button\" pButton (click)=\"onConfirm(delAction)\" label=\"Да\" class=\"p-button-success\"></button>\n        </div>\n        <div class=\"p-col-6\">\n          <button type=\"button\" pButton (click)=\"onReject()\" label=\"Нет\" class=\"p-button-secondary\"></button>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</p-toast>\n\n<p-toast position=\"center\" key=\"serviceError\" [baseZIndex]=\"5000\"></p-toast>\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nimport { commentAdapter, CommentState } from './state';\r\n\r\nconst getCommentFeatureState = createFeatureSelector<CommentState>('comments');\r\n\r\nexport const getComments = createSelector(\r\n  getCommentFeatureState,\r\n  commentAdapter.getSelectors().selectAll\r\n);\r\n\r\nexport const getCommentsLoading = createSelector(\r\n  getCommentFeatureState,\r\n  (state: CommentState) => state.loading\r\n);\r\n\r\nexport const getCommentsLoaded = createSelector(\r\n  getCommentFeatureState,\r\n  (state: CommentState) => state.loaded\r\n);\r\n\r\nexport const getError = createSelector(\r\n  getCommentFeatureState,\r\n  (state: CommentState) => state.error\r\n);\r\n\r\nexport const getCurrentCommentId = createSelector(\r\n  getCommentFeatureState,\r\n  (state: CommentState) => state.selectedCommentId\r\n);\r\nexport const getCurrentComment = createSelector(\r\n  getCommentFeatureState,\r\n  getCurrentCommentId,\r\n  (state) => {\r\n    if (state !== null && state.selectedCommentId !== null) {\r\n      return state.entities[state.selectedCommentId];\r\n    }\r\n    return null;\r\n  }\r\n);\r\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\r\n\r\nimport { BookState, bookAdapter } from './state';\r\n\r\nconst getBookFeatureState = createFeatureSelector<BookState>('books');\r\n\r\nexport const getBooks = createSelector(\r\n  getBookFeatureState,\r\n  bookAdapter.getSelectors().selectAll\r\n);\r\n\r\nexport const getBooksLoading = createSelector(\r\n  getBookFeatureState,\r\n  (state: BookState) => state.loading\r\n);\r\n\r\nexport const getBooksLoaded = createSelector(\r\n  getBookFeatureState,\r\n  (state: BookState) => state.loaded\r\n);\r\n\r\nexport const getError = createSelector(\r\n  getBookFeatureState,\r\n  (state: BookState) => state.error\r\n);\r\n\r\nexport const getCurrentBookId = createSelector(\r\n  getBookFeatureState,\r\n  (state: BookState) => state.selectedBookId\r\n);\r\nexport const getCurrentBook = createSelector(\r\n  getBookFeatureState,\r\n  getCurrentBookId,\r\n  (state) => {\r\n    if (state !== null && state.selectedBookId !== null) {\r\n      return state.entities[state.selectedBookId]\r\n    }\r\n    return null;\r\n  }\r\n);\r\n","import { Update } from '@ngrx/entity';\r\nimport { Action } from '@ngrx/store';\r\n\r\nimport { AuthorModel } from '../../models/author.model';\r\n\r\n\r\nexport enum AuthorActionTypes {\r\n  LOAD_AUTHORS = '[Author/API Load Authors Request',\r\n  LOAD_AUTHORS_SUCCESS = '[Author/API Load Authors Success',\r\n  LOAD_AUTHORS_FAIL = '[Author/API Load Authors Failure',\r\n  LOAD_AUTHOR = '[Author/API Load Author Request',\r\n  LOAD_AUTHOR_SUCCESS = '[Author/API Load Author Success',\r\n  LOAD_AUTHOR_FAIL = '[Author/API Load Author Failure',\r\n  CREATE_AUTHOR = '[Author/API Create Author Request',\r\n  CREATE_AUTHOR_SUCCESS = '[Author/API Create Author Success',\r\n  CREATE_AUTHOR_FAIL = '[Author/API Create Author Failure',\r\n  UPDATE_AUTHOR = '[Author/API Update Author Request',\r\n  UPDATE_AUTHOR_SUCCESS = '[Author/API Update Author Success',\r\n  UPDATE_AUTHOR_FAIL = '[Author/API Update Author Failure',\r\n  DELETE_AUTHOR = '[Author/API Delete Author Request',\r\n  DELETE_AUTHOR_SUCCESS = '[Author/API Delete Author Success',\r\n  DELETE_AUTHOR_FAIL = '[Author/API Delete Author Failure',\r\n}\r\n\r\nexport class LoadAuthors implements Action {\r\n  readonly type = AuthorActionTypes.LOAD_AUTHORS;\r\n}\r\n\r\nexport class LoadAuthorsSuccess implements Action {\r\n  readonly type = AuthorActionTypes.LOAD_AUTHORS_SUCCESS;\r\n\r\n  constructor(public payload: AuthorModel[]) {\r\n  }\r\n}\r\n\r\nexport class LoadAuthorsFail implements Action {\r\n  readonly type = AuthorActionTypes.LOAD_AUTHORS_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class LoadAuthor implements Action {\r\n  readonly type = AuthorActionTypes.LOAD_AUTHOR;\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class LoadAuthorSuccess implements Action {\r\n  readonly type = AuthorActionTypes.LOAD_AUTHOR_SUCCESS;\r\n\r\n  constructor(public payload: AuthorModel) {\r\n  }\r\n}\r\n\r\nexport class LoadAuthorFail implements Action {\r\n  readonly type = AuthorActionTypes.LOAD_AUTHOR_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class CreateAuthor implements Action {\r\n  readonly type = AuthorActionTypes.CREATE_AUTHOR;\r\n\r\n  constructor(public payload: AuthorModel) {\r\n  }\r\n\r\n}\r\n\r\nexport class CreateAuthorSuccess implements Action {\r\n  readonly type = AuthorActionTypes.CREATE_AUTHOR_SUCCESS;\r\n\r\n  constructor(public payload: AuthorModel) {\r\n  }\r\n}\r\n\r\nexport class CreateAuthorFail implements Action {\r\n  readonly type = AuthorActionTypes.CREATE_AUTHOR_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class UpdateAuthor implements Action {\r\n  readonly type = AuthorActionTypes.UPDATE_AUTHOR;\r\n\r\n  constructor(public payload: AuthorModel) {\r\n  }\r\n\r\n}\r\n\r\nexport class UpdateAuthorSuccess implements Action {\r\n  readonly type = AuthorActionTypes.UPDATE_AUTHOR_SUCCESS;\r\n\r\n  constructor(public payload: Update<AuthorModel>) {\r\n  }\r\n}\r\n\r\nexport class UpdateAuthorFail implements Action {\r\n  readonly type = AuthorActionTypes.UPDATE_AUTHOR_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n//\r\nexport class DeleteAuthor implements Action {\r\n  readonly type = AuthorActionTypes.DELETE_AUTHOR;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class DeleteAuthorSuccess implements Action {\r\n  readonly type = AuthorActionTypes.DELETE_AUTHOR_SUCCESS;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class DeleteAuthorFail implements Action {\r\n  readonly type = AuthorActionTypes.DELETE_AUTHOR_FAIL;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport type Actions =\r\n  | LoadAuthors\r\n  | LoadAuthorsSuccess\r\n  | LoadAuthorsFail\r\n  | LoadAuthor\r\n  | LoadAuthorSuccess\r\n  | LoadAuthorFail\r\n  | CreateAuthor\r\n  | CreateAuthorSuccess\r\n  | CreateAuthorFail\r\n  | UpdateAuthor\r\n  | UpdateAuthorSuccess\r\n  | UpdateAuthorFail\r\n  | DeleteAuthor\r\n  | DeleteAuthorSuccess\r\n  | DeleteAuthorFail;\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NGXLogger } from 'ngx-logger';\nimport { Subscription } from 'rxjs';\nimport { GenreModel } from '../../models/genre.model';\n\n@Component({\n  selector: 'app-genre-edit',\n  templateUrl: './genre-edit.component.html',\n  styleUrls: ['./genre-edit.component.css']\n})\nexport class GenreEditComponent implements OnInit, OnDestroy {\n  @Input() public display = false;\n  @Input() public genre: GenreModel | null = null;\n  @Output() public displayChange = new EventEmitter<boolean>();\n  @Output() public genreChange = new EventEmitter<GenreModel>();\n\n  public dialogHeader = '';\n  public submitted = false;\n  private subscriptions: Subscription = new Subscription();\n\n  public genreEditForm: FormGroup = new FormGroup({\n    id: new FormControl(''),\n    genreName: new FormControl('', Validators.required),\n  });\n\n  constructor(\n    private logger: NGXLogger\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  onDisplayChange(val: boolean) {\n    if (this.display) {\n      if (this.genre) {\n        this.logger.info(`onDisplayChange: ${JSON.stringify(this.genre)}`);\n\n        this.dialogHeader = 'Редактировать жанр';\n        this.genreEditForm.patchValue({\n          id: this.genre && this.genre.id ? this.genre.id : null,\n          genreName: this.genre.name,\n        });\n      } else {\n        this.dialogHeader = 'Добавить жанр';\n        this.genreEditForm.patchValue({\n          id: null,\n          genreName: ''\n        });\n      }\n    }\n    this.submitted = false;\n    this.display = val;\n    this.displayChange.emit(val);\n  }\n\n  onGenreChange() {\n    this.submitted = true;\n    const nameField = this.genreEditForm.get('genreName');\n    const updateGenre: GenreModel = {\n      id: this.genre ? this.genre.id : '0',\n      name: nameField?.value,\n    };\n    if (this.genreEditForm.valid) {\n      this.genre = updateGenre;\n      this.genreChange.emit(updateGenre);\n      this.display = false;\n    }\n  }\n\n}\n","<p-dialog [(visible)]=\"display\" header=\"{{dialogHeader}}\" modal=\"true\" (onShow)=\"onDisplayChange(true)\"\n          (onHide)=\"onDisplayChange(false)\">\n  <div class=\"dialog\">\n    <form [formGroup]=\"genreEditForm\" (submit)=\"onGenreChange()\" class=\"form-inline\">\n      <label class=\"label\" for=\"fldGenreName\">Название жанра *</label>\n      <div class=\"ui-inputgroup\">\n        <input\n          class=\"input-text\"\n          pInputText type=\"text\"\n          id=\"fldGenreName\"\n          formControlName=\"genreName\"\n          placeholder=\"Название жанра\"\n          pTooltip=\"Введите название жанра\">\n      </div>\n      <div *ngIf=\"submitted && genreEditForm.controls['genreName'].invalid &&\n        (genreEditForm.controls['genreName'].dirty || genreEditForm.controls['genreName'].touched)\"\n           class=\"alert alert-danger\">\n        <div *ngIf=\"genreEditForm.controls['genreName'].errors.required\"></div>\n      </div>\n\n      <div class=\"btn-blk\">\n        <p-button\n          class=\"button\"\n          type=\"submit\"\n          label=\"Сохранить\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          [disabled]=\"!genreEditForm.valid\">\n        </p-button>\n        <p-button\n          class=\"button\"\n          type=\"button\"\n          (onClick)=\"onDisplayChange(false)\"\n          label=\"Отмена\"\n          icon=\"pi pi-times\"\n          iconPos=\"right\">\n        </p-button>\n      </div>\n    </form>\n  </div>\n</p-dialog>\n","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { CommentModel } from '../../models/comment.model';\r\n\r\nexport interface CommentState extends EntityState<CommentModel> {\r\n  selectedCommentId: string | null;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  error: string;\r\n}\r\n\r\nexport const commentAdapter: EntityAdapter<CommentModel> = createEntityAdapter<CommentModel>();\r\n\r\nexport const initialCommentState: CommentState = commentAdapter.getInitialState(\r\n  {\r\n    ids: [],\r\n    entities: {},\r\n    selectedCommentId: null,\r\n    loading: false,\r\n    loaded: false,\r\n    error: '',\r\n  }\r\n);\r\n","import * as AuthorStoreActions from './actions';\r\nimport * as AuthorStoreSelectors from './selectors';\r\nimport * as AuthorStoreState from './state';\r\n\r\nexport { AuthorStoreModule } from './author-store.module';\r\n\r\nexport { AuthorStoreActions, AuthorStoreSelectors, AuthorStoreState };\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    this.router.navigate(['/manage']).then();\n  }\n}\n","<div class=\"footer\">\n  <div class=\"p-grid\">\n    <div class=\"p-col-10\"></div>\n    <div class=\"p-col-2\">\n      <p-button type=\"button\" class=\"button\" label=\"Управление\" (onClick)=\"submit()\"></p-button>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { AuthorEffect } from './effects';\r\nimport { authorReducer } from './reducer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StoreModule.forFeature('authors', authorReducer),\r\n    EffectsModule.forFeature([AuthorEffect]),\r\n  ],\r\n  providers: [AuthorEffect],\r\n})\r\nexport class AuthorStoreModule {\r\n}\r\n","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { GenreModel } from '../../models/genre.model';\r\n\r\nexport interface GenreState extends EntityState<GenreModel> {\r\n  selectedGenreId: string | null;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  error: string;\r\n}\r\n\r\nexport const genreAdapter: EntityAdapter<GenreModel> = createEntityAdapter<GenreModel>();\r\n\r\nexport const initialGenreState: GenreState = genreAdapter.getInitialState(\r\n  {\r\n    ids: [],\r\n    entities: {},\r\n    selectedGenreId: null,\r\n    loading: false,\r\n    loaded: false,\r\n    error: '',\r\n  }\r\n);\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AuthorModel } from '../models/author.model';\r\n\r\n@Injectable()\r\nexport class AuthorService {\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) {\r\n  }\r\n\r\n  public loadAuthors(): Observable<AuthorModel[]> {\r\n    return this.http\r\n      .get<AuthorModel[]>('/api/author')\r\n      .pipe(map((data: AuthorModel[]) => data));\r\n  }\r\n\r\n  public loadAuthorById(payload: string): Observable<AuthorModel> {\r\n    return this.http\r\n      .get<AuthorModel>(`/api/author/${payload}`)\r\n      .pipe(map((data: AuthorModel) => data));\r\n  }\r\n\r\n  public createAuthor(payload: AuthorModel): Observable<AuthorModel> {\r\n    return this.http\r\n      .post<AuthorModel>('/api/author', payload)\r\n      .pipe(map((data: AuthorModel) => data));\r\n  }\r\n\r\n  public updateAuthor(payload: AuthorModel): Observable<AuthorModel> {\r\n    return this.http\r\n      .put<AuthorModel>(`/api/author/${payload.id}`, payload)\r\n      .pipe(map((data: AuthorModel) => data));\r\n  }\r\n\r\n  public deleteAuthor(payload: string) {\r\n    return this.http\r\n      .delete<string>(`/api/author/${payload}`)\r\n      .pipe(map((data: string) => data));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comments-tab',\n  templateUrl: './comments-tab.component.html',\n  styleUrls: ['./comments-tab.component.css']\n})\nexport class CommentsTabComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>comments-tab works!</p>\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { GenreModel } from '../models/genre.model';\r\n\r\n@Pipe({name: 'extractGenreNameProperty'})\r\nexport class ExtractGenreNamePropertyPipe implements PipeTransform {\r\n\r\n  transform(genres: GenreModel[]): string {\r\n    return genres.map(genre => genre.name).join(', ');\r\n  }\r\n\r\n}\r\n","import * as CommentStoreActions from './actions';\r\nimport * as CommentStoreSelectors from './selectors';\r\nimport * as CommentStoreState from './state';\r\n\r\nexport { CommentStoreModule } from './comment-store.module';\r\n\r\nexport { CommentStoreActions, CommentStoreSelectors, CommentStoreState };\r\n","import * as authorActions from './actions';\r\nimport { AuthorState, authorAdapter, initialAuthorState } from './state';\r\n\r\nexport function authorReducer(\r\n  state = initialAuthorState,\r\n  action: authorActions.Actions\r\n): AuthorState {\r\n  switch (action.type) {\r\n    case authorActions.AuthorActionTypes.LOAD_AUTHORS_SUCCESS: {\r\n      return authorAdapter.setAll(action.payload, {\r\n        ...state,\r\n        loading: false,\r\n        loaded: true,\r\n      });\r\n    }\r\n    case authorActions.AuthorActionTypes.LOAD_AUTHORS_FAIL: {\r\n      return {\r\n        ...state,\r\n        entities: {},\r\n        loading: false,\r\n        loaded: false,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case authorActions.AuthorActionTypes.LOAD_AUTHOR_SUCCESS: {\r\n      return authorAdapter.addOne(action.payload, {\r\n        ...state,\r\n        selectedAuthorId: action.payload.id,\r\n      });\r\n    }\r\n    case authorActions.AuthorActionTypes.LOAD_AUTHOR_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case authorActions.AuthorActionTypes.CREATE_AUTHOR_SUCCESS: {\r\n      return authorAdapter.addOne(action.payload, state);\r\n    }\r\n    case authorActions.AuthorActionTypes.CREATE_AUTHOR_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case authorActions.AuthorActionTypes.UPDATE_AUTHOR_SUCCESS: {\r\n      return authorAdapter.updateOne(action.payload, state);\r\n    }\r\n    case authorActions.AuthorActionTypes.UPDATE_AUTHOR_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n\r\n    case authorActions.AuthorActionTypes.DELETE_AUTHOR_SUCCESS: {\r\n      return authorAdapter.removeOne(action.payload, state);\r\n    }\r\n    case authorActions.AuthorActionTypes.DELETE_AUTHOR_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n}\r\n","<div class=\"wrapper\">\r\n  <router-outlet></router-outlet>\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\r\nimport { AuthorModel } from '../../models/author.model';\r\n\r\nexport interface AuthorState extends EntityState<AuthorModel> {\r\n  selectedAuthorId: string | null;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  error: string;\r\n}\r\n\r\nexport const authorAdapter: EntityAdapter<AuthorModel> = createEntityAdapter<AuthorModel>();\r\n\r\nexport const initialAuthorState: AuthorState = authorAdapter.getInitialState(\r\n  {\r\n    ids: [],\r\n    entities: {},\r\n    selectedAuthorId: null,\r\n    loading: false,\r\n    loaded: false,\r\n    error: '',\r\n  }\r\n);\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comment-edit',\n  templateUrl: './comment-edit.component.html',\n  styleUrls: ['./comment-edit.component.css']\n})\nexport class CommentEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>comment-edit works!</p>\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CardModule } from 'primeng/card';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { PanelMenuModule } from 'primeng/panelmenu';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthorEditComponent } from './components/author-edit/author-edit.component';\r\nimport { AuthorsTabComponent } from './components/authors-tab/authors-tab.component';\r\nimport { BookEditComponent } from './components/book-edit/book-edit.component';\r\nimport { BooksTabComponent } from './components/books-tab/books-tab.component';\r\nimport { BooksViewComponent } from './components/books-view/books-view.component';\r\nimport { CommentEditComponent } from './components/comment-edit/comment-edit.component';\r\nimport { CommentsTabComponent } from './components/comments-tab/comments-tab.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { GenreEditComponent } from './components/genre-edit/genre-edit.component';\r\nimport { GenresTabComponent } from './components/genres-tab/genres-tab.component';\r\nimport { HomePageComponent } from './components/home-page/home-page.component';\r\nimport { ManagePageComponent } from './components/manage-page/manage-page.component';\r\nimport { ExtractGenreNamePropertyPipe } from './pipes/extract-genre-name-property.pipe';\r\nimport { AuthorService } from './services/author.service';\r\nimport { BookService } from './services/book.service';\r\nimport { CommentService } from './services/comment.service';\r\nimport { GenreService } from './services/genre.service';\r\nimport { RootStoreModule } from './store/root-store.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    RootStoreModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    //  PrimeNG modules\r\n    AccordionModule,\r\n    ButtonModule,\r\n    CardModule,\r\n    CheckboxModule,\r\n    DialogModule,\r\n    DropdownModule,\r\n    DynamicDialogModule,\r\n    InputTextModule,\r\n    InputTextareaModule,\r\n    ListboxModule,\r\n    MenuModule,\r\n    PanelMenuModule,\r\n    PanelModule,\r\n    TabViewModule,\r\n    TableModule,\r\n    ToastModule,\r\n    ToolbarModule,\r\n    TooltipModule,\r\n    RippleModule,\r\n    MessagesModule,\r\n    MessageModule,\r\n    // Logger\r\n    LoggerModule.forRoot({\r\n      serverLoggingUrl: '/api/logs',\r\n      level: NgxLoggerLevel.DEBUG,\r\n      serverLogLevel: NgxLoggerLevel.ERROR\r\n    })\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    HomePageComponent,\r\n    BookEditComponent,\r\n    AuthorEditComponent,\r\n    GenreEditComponent,\r\n    CommentEditComponent,\r\n    FooterComponent,\r\n    ManagePageComponent,\r\n    BooksViewComponent,\r\n    AuthorsTabComponent,\r\n    BooksTabComponent,\r\n    CommentsTabComponent,\r\n    GenresTabComponent,\r\n    ExtractGenreNamePropertyPipe,\r\n  ],\r\n  providers: [\r\n    AuthorService,\r\n    BookService,\r\n    CommentService,\r\n    GenreService,\r\n    MessageService,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nimport { authorAdapter, AuthorState } from './state';\r\n\r\nconst getAuthorFeatureState = createFeatureSelector<AuthorState>('authors');\r\n\r\nexport const getAuthors = createSelector(\r\n  getAuthorFeatureState,\r\n  authorAdapter.getSelectors().selectAll\r\n);\r\n\r\nexport const getAuthorsLoading = createSelector(\r\n  getAuthorFeatureState,\r\n  (state: AuthorState) => state.loading\r\n);\r\n\r\nexport const getAuthorsLoaded = createSelector(\r\n  getAuthorFeatureState,\r\n  (state: AuthorState) => state.loaded\r\n);\r\n\r\nexport const getError = createSelector(\r\n  getAuthorFeatureState,\r\n  (state: AuthorState) => state.error\r\n);\r\n\r\nexport const getCurrentAuthorId = createSelector(\r\n  getAuthorFeatureState,\r\n  (state: AuthorState) => state.selectedAuthorId\r\n);\r\nexport const getCurrentAuthor = createSelector(\r\n  getAuthorFeatureState,\r\n  getCurrentAuthorId,\r\n  (state) => {\r\n    if (state !== null && state.selectedAuthorId !== null) {\r\n      return state.entities[state.selectedAuthorId]\r\n    }\r\n    return null;\r\n  }\r\n);\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-page',\n  templateUrl: './manage-page.component.html',\n  styleUrls: ['./manage-page.component.css']\n})\nexport class ManagePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"layout-content\">\n  <div class=\"card p-grid p-align-center p-nogutter\">\n    <div class=\"p-col\"></div>\n    <div class=\"p-col-10 p-col-align-center\">\n      <p-panel>\n        <p-tabView>\n          <p-tabPanel header=\"Книги\">\n            <app-books-tab></app-books-tab>\n          </p-tabPanel>\n          <p-tabPanel header=\"Справочник авторов\">\n            <app-authors-tab></app-authors-tab>\n          </p-tabPanel>\n          <p-tabPanel header=\"Справочник жанров\">\n            <app-genres-tab></app-genres-tab>\n          </p-tabPanel>\n          <p-tabPanel header=\"Комментарии\">\n            <app-genres-tab></app-genres-tab>\n          </p-tabPanel>\n        </p-tabView>\n      </p-panel>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit, OnDestroy {\n\n  private subscriptions: Subscription = new Subscription();\n\n  searchForm: FormGroup = new FormGroup({\n    searchText: new FormControl('', [Validators.required]),\n  });\n\n  clickSearch = false;\n  clickGetAll = false;\n  searchText = '';\n\n  constructor(\n    private router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n\n  submitSearch(): void {\n    if (this.clickSearch && this.searchForm.valid) {\n      this.searchText = this.searchForm.get('searchText')?.value;\n      this.router.navigate(['/books-view']).then();\n    } else if (this.clickGetAll) {\n      this.router.navigate(['/books-view']).then();\n    }\n  }\n\n  public onClickSearchButton(): void {\n    this.clickSearch = true;\n    this.clickGetAll = false;\n  }\n\n  public onClickGetAllButton(): void {\n    this.clickSearch = false;\n    this.clickGetAll = true;\n  }\n\n}\n","<div class=\"p-grid p-align-center p-nogutter welcome-panel\">\n  <div class=\"p-col-2\"></div>\n  <div class=\"p-col-5 p-col-align-center\">\n    <p-panel>\n      <form [formGroup]=\"searchForm\" (ngSubmit)=\"submitSearch()\">\n        <div class=\"welcome-text\">\n          <h3>Добро пожаловать библиотеку</h3>\n          <h1>OTUS</h1>\n        </div>\n        <div class=\"p-inputgroup\">\n          <input id=\"search-input\" type=\"text\" pInputText placeholder=\"Введите часть названия книги для поиска\"\n                 formControlName=\"searchText\">\n          <button type=\"submit\" pButton pRipple label=\"Search\" (click)=\"onClickSearchButton()\"></button>\n          <button type=\"submit\" pButton pRipple label=\"GetAll\" (click)=\"onClickGetAllButton()\"></button>\n        </div>\n      </form>\n    </p-panel>\n  </div>\n  <div class=\"p-col-2\"></div>\n</div>\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, mergeMap } from 'rxjs/operators';\r\nimport { GenreModel } from '../../models/genre.model';\r\n\r\nimport { GenreService } from '../../services/genre.service';\r\nimport * as genreActions from './actions';\r\n\r\n@Injectable()\r\nexport class GenreEffect {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private genreService: GenreService\r\n  ) {\r\n  }\r\n\r\n  @Effect()\r\n  loadGenres$: Observable<Action> = this.actions$.pipe(\r\n    ofType<genreActions.LoadGenres>(\r\n      genreActions.GenreActionTypes.LOAD_GENRES\r\n    ),\r\n    mergeMap((action: genreActions.LoadGenres) =>\r\n      this.genreService.loadGenres().pipe(\r\n        map(\r\n          (genres: GenreModel[]) =>\r\n            new genreActions.LoadGenresSuccess(genres)\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new genreActions.LoadGenresFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  loadGenre$: Observable<Action> = this.actions$.pipe(\r\n    ofType<genreActions.LoadGenre>(\r\n      genreActions.GenreActionTypes.LOAD_GENRE\r\n    ),\r\n    mergeMap((action: genreActions.LoadGenre) =>\r\n      this.genreService.loadGenreById(action.payload).pipe(\r\n        map(\r\n          (genre: GenreModel) =>\r\n            new genreActions.LoadGenreSuccess(genre)\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new genreActions.LoadGenreFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  createGenre$: Observable<Action> = this.actions$.pipe(\r\n    ofType<genreActions.CreateGenre>(\r\n      genreActions.GenreActionTypes.CREATE_GENRE\r\n    ),\r\n    map((action: genreActions.CreateGenre) => action.payload),\r\n    mergeMap((genre: GenreModel) =>\r\n      this.genreService.createGenre(genre).pipe(\r\n        map(\r\n          (newGenre: GenreModel) =>\r\n            new genreActions.CreateGenreSuccess(newGenre)\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new genreActions.CreateGenreFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  updateGenre$: Observable<Action> = this.actions$.pipe(\r\n    ofType<genreActions.UpdateGenre>(\r\n      genreActions.GenreActionTypes.UPDATE_GENRE\r\n    ),\r\n    map((action: genreActions.UpdateGenre) => action.payload),\r\n    mergeMap((genre: GenreModel) =>\r\n      this.genreService.updateGenre(genre).pipe(\r\n        map(\r\n          (updateGenre: GenreModel) =>\r\n            new genreActions.UpdateGenreSuccess({\r\n              id: updateGenre.id,\r\n              changes: updateGenre,\r\n            })\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new genreActions.UpdateGenreFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  deleteGenre$: Observable<Action> = this.actions$.pipe(\r\n    ofType<genreActions.DeleteGenre>(\r\n      genreActions.GenreActionTypes.DELETE_GENRE\r\n    ),\r\n    map((action: genreActions.DeleteGenre) => action.payload),\r\n    mergeMap((id: string) =>\r\n      this.genreService.deleteGenre(id).pipe(\r\n        map(() => new genreActions.DeleteGenreSuccess(id)),\r\n        catchError((err) =>\r\n          of(\r\n            new genreActions.DeleteGenreFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { CommentEffect } from './effects';\r\nimport { commentReducer } from './reducer';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StoreModule.forFeature('comments', commentReducer),\r\n    EffectsModule.forFeature([CommentEffect]),\r\n  ],\r\n  providers: [CommentEffect],\r\n})\r\nexport class CommentStoreModule {\r\n}\r\n","import * as genreActions from './actions';\r\nimport { GenreState, genreAdapter, initialGenreState } from './state';\r\n\r\nexport function genreReducer(\r\n  state = initialGenreState,\r\n  action: genreActions.Actions\r\n): GenreState {\r\n  switch (action.type) {\r\n    case genreActions.GenreActionTypes.LOAD_GENRES_SUCCESS: {\r\n      return genreAdapter.setAll(action.payload, {\r\n        ...state,\r\n        loading: false,\r\n        loaded: true,\r\n      });\r\n    }\r\n    case genreActions.GenreActionTypes.LOAD_GENRES_FAIL: {\r\n      return {\r\n        ...state,\r\n        entities: {},\r\n        loading: false,\r\n        loaded: false,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case genreActions.GenreActionTypes.LOAD_GENRE_SUCCESS: {\r\n      return genreAdapter.addOne(action.payload, {\r\n        ...state,\r\n        selectedGenreId: action.payload.id,\r\n      });\r\n    }\r\n    case genreActions.GenreActionTypes.LOAD_GENRE_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case genreActions.GenreActionTypes.CREATE_GENRE_SUCCESS: {\r\n      return genreAdapter.addOne(action.payload, state);\r\n    }\r\n    case genreActions.GenreActionTypes.CREATE_GENRE_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case genreActions.GenreActionTypes.UPDATE_GENRE_SUCCESS: {\r\n      return genreAdapter.updateOne(action.payload, state);\r\n    }\r\n    case genreActions.GenreActionTypes.UPDATE_GENRE_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n\r\n    case genreActions.GenreActionTypes.DELETE_GENRE_SUCCESS: {\r\n      return genreAdapter.removeOne(action.payload, state);\r\n    }\r\n    case genreActions.GenreActionTypes.DELETE_GENRE_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, mergeMap } from 'rxjs/operators';\r\nimport { CommentModel } from '../../models/comment.model';\r\n\r\nimport { CommentService } from '../../services/comment.service';\r\nimport * as commentActions from './actions';\r\n\r\n@Injectable()\r\nexport class CommentEffect {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private commentService: CommentService\r\n  ) {\r\n  }\r\n\r\n  @Effect()\r\n  loadComments$: Observable<Action> = this.actions$.pipe(\r\n    ofType<commentActions.LoadComments>(\r\n      commentActions.CommentActionTypes.LOAD_COMMENTS_BY_BOOK_ID\r\n    ),\r\n    mergeMap((action: commentActions.LoadComments) =>\r\n      this.commentService.loadComments(action.payload).pipe(\r\n        map(\r\n          (comments: CommentModel[]) =>\r\n            new commentActions.LoadCommentsSuccess(comments)\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new commentActions.LoadCommentsFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  loadComment$: Observable<Action> = this.actions$.pipe(\r\n    ofType<commentActions.LoadComment>(\r\n      commentActions.CommentActionTypes.LOAD_COMMENT\r\n    ),\r\n    mergeMap((action: commentActions.LoadComment) =>\r\n      this.commentService.loadCommentById(action.payload).pipe(\r\n        map(\r\n          (comment: CommentModel) =>\r\n            new commentActions.LoadCommentSuccess(comment)\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new commentActions.LoadCommentFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  createComment$: Observable<Action> = this.actions$.pipe(\r\n    ofType<commentActions.CreateComment>(\r\n      commentActions.CommentActionTypes.CREATE_COMMENT\r\n    ),\r\n    map((action: commentActions.CreateComment) => action.payload),\r\n    mergeMap((comment: CommentModel) =>\r\n      this.commentService.createComment(comment).pipe(\r\n        map(\r\n          (newComment: CommentModel) =>\r\n            new commentActions.CreateCommentSuccess(newComment)\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new commentActions.CreateCommentFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  updateComment$: Observable<Action> = this.actions$.pipe(\r\n    ofType<commentActions.UpdateComment>(\r\n      commentActions.CommentActionTypes.UPDATE_COMMENT\r\n    ),\r\n    map((action: commentActions.UpdateComment) => action.payload),\r\n    mergeMap((comment: CommentModel) =>\r\n      this.commentService.updateComment(comment).pipe(\r\n        map(\r\n          (updateComment: CommentModel) =>\r\n            new commentActions.UpdateCommentSuccess({\r\n              id: updateComment.id,\r\n              changes: updateComment,\r\n            })\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new commentActions.UpdateCommentFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  deleteComment$: Observable<Action> = this.actions$.pipe(\r\n    ofType<commentActions.DeleteComment>(\r\n      commentActions.CommentActionTypes.DELETE_COMMENT\r\n    ),\r\n    map((action: commentActions.DeleteComment) => action.payload),\r\n    mergeMap((id: string) =>\r\n      this.commentService.deleteComment(id).pipe(\r\n        map(() => new commentActions.DeleteCommentSuccess(id)),\r\n        catchError((err) =>\r\n          of(\r\n            new commentActions.DeleteCommentFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NGXLogger } from 'ngx-logger';\nimport { Subscription } from 'rxjs';\nimport { AuthorModel } from '../../models/author.model';\nimport { BookModel } from '../../models/book.model';\nimport { GenreModel } from '../../models/genre.model';\n\n@Component({\n  selector: 'app-book-edit',\n  templateUrl: './book-edit.component.html',\n  styleUrls: ['./book-edit.component.css']\n})\nexport class BookEditComponent implements OnInit, OnDestroy {\n  @Input() public display = false;\n  @Input() public book: BookModel | null = null;\n  @Input() public authors: AuthorModel[] = [];\n  @Input() public genres: GenreModel[] = [];\n  @Output() public displayChange = new EventEmitter<boolean>();\n  @Output() public bookChange = new EventEmitter<BookModel>();\n\n  public selectedAuthor: AuthorModel | undefined = undefined;\n  public selectedGenres: GenreModel[] | undefined = undefined;\n\n  public dialogHeader = '';\n  public submitted = false;\n  private subscriptions: Subscription = new Subscription();\n\n  public bookEditForm: FormGroup = new FormGroup({\n    id: new FormControl(''),\n    bookName: new FormControl('', Validators.required),\n  });\n\n  constructor(\n    private logger: NGXLogger\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  onDisplayChange(val: boolean) {\n    if (this.display) {\n      if (this.book) {\n        this.logger.info(`onDisplayChange: ${JSON.stringify(this.book)}`);\n\n        this.dialogHeader = 'Редактировать книгу';\n        this.bookEditForm.patchValue({\n          id: this.book && this.book.id ? this.book.id : null,\n          bookName: this.book.name,\n        });\n        this.selectedAuthor = this.book.author;\n        this.selectedGenres = this.book.genres;\n      } else {\n        this.dialogHeader = 'Добавить книгу';\n        this.bookEditForm.patchValue({\n          id: null,\n          bookName: ''\n        });\n      }\n    }\n    this.submitted = false;\n    this.display = val;\n    this.displayChange.emit(val);\n  }\n\n  onBookChange() {\n    this.submitted = true;\n    const nameField = this.bookEditForm.get('bookName');\n    const updateBook: BookModel = {\n      id: this.book ? this.book.id : '0',\n      name: nameField?.value,\n      author: this.selectedAuthor,\n      genres: this.selectedGenres\n    };\n    if (this.bookEditForm.valid) {\n      this.book = updateBook;\n      this.bookChange.emit(updateBook);\n      this.display = false;\n    }\n  }\n\n  onAuthorChange(event: any) {\n\n  }\n\n  onGenreChange(event: any) {\n\n  }\n\n}\n","<p-dialog [(visible)]=\"display\" header=\"{{dialogHeader}}\" modal=\"true\" (onShow)=\"onDisplayChange(true)\"\n          (onHide)=\"onDisplayChange(false)\">\n  <div class=\"dialog\">\n    <form [formGroup]=\"bookEditForm\" (submit)=\"onBookChange()\" class=\"form-inline\">\n      <label class=\"label\" for=\"fldBookName\">Название книги *</label>\n      <div class=\"ui-inputgroup\">\n        <input\n          class=\"input-text\"\n          pInputText type=\"text\"\n          id=\"fldBookName\"\n          formControlName=\"bookName\"\n          placeholder=\"Название книги\"\n          pTooltip=\"Введите название книги\">\n      </div>\n      <div *ngIf=\"submitted && bookEditForm.controls['bookName'].invalid &&\n        (bookEditForm.controls['bookName'].dirty || bookEditForm.controls['bookName'].touched)\" class=\"alert alert-danger\">\n        <div *ngIf=\"bookEditForm.controls['bookName'].errors.required\"></div>\n      </div>\n      <label class=\"label\" for=\"authors\">Автор</label>\n      <div class=\"ui-inputgroup\">\n        <div class=\"dropdown\">\n          <p-dropdown\n            id=\"authors\"\n            [options]=\"authors\"\n            [(ngModel)]=\"selectedAuthor\"\n            (ngModelChange)=\"onAuthorChange($event)\"\n            [ngModelOptions]=\"{standalone: true}\"\n            placeholder=\"Выберите автора\"\n            optionLabel=\"name\"\n            [style]=\"{'width': '100%'}\">\n          </p-dropdown>\n        </div>\n      </div>\n      <label class=\"label\" for=\"genre\">Жанр</label>\n      <div class=\"ui-inputgroup\">\n        <p-table id=\"genre\" [value]=\"genres\" [(selection)]=\"selectedGenres\" dataKey=\"id\">\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th scope=\"col\" style=\"width: 3rem\">\n                <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n              </th>\n              <th scope=\"col\">Genre Name</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-genre>\n            <tr>\n              <td>\n                <p-tableCheckbox [value]=\"genre\"></p-tableCheckbox>\n              </td>\n              <td>{{genre.name}}</td>\n          </ng-template>\n        </p-table>\n      </div>\n\n      <div class=\"btn-blk\">\n        <p-button\n          class=\"button\"\n          type=\"submit\"\n          label=\"Сохранить\"\n          icon=\"pi pi-check\"\n          iconPos=\"right\"\n          [disabled]=\"!bookEditForm.valid\">\n        </p-button>\n        <p-button\n          class=\"button\"\n          type=\"button\"\n          (onClick)=\"onDisplayChange(false)\"\n          label=\"Отмена\"\n          icon=\"pi pi-times\"\n          iconPos=\"right\">\n        </p-button>\n      </div>\n    </form>\n  </div>\n</p-dialog>\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\r\n\r\nimport { GenreState, genreAdapter } from './state';\r\n\r\nconst getGenreFeatureState = createFeatureSelector<GenreState>('genres');\r\n\r\nexport const getGenres = createSelector(\r\n  getGenreFeatureState,\r\n  genreAdapter.getSelectors().selectAll\r\n);\r\n\r\nexport const getGenresLoading = createSelector(\r\n  getGenreFeatureState,\r\n  (state: GenreState) => state.loading\r\n);\r\n\r\nexport const getGenresLoaded = createSelector(\r\n  getGenreFeatureState,\r\n  (state: GenreState) => state.loaded\r\n);\r\n\r\nexport const getError = createSelector(\r\n  getGenreFeatureState,\r\n  (state: GenreState) => state.error\r\n);\r\n\r\nexport const getCurrentGenreId = createSelector(\r\n  getGenreFeatureState,\r\n  (state: GenreState) => state.selectedGenreId\r\n);\r\nexport const getCurrentGenre = createSelector(\r\n  getGenreFeatureState,\r\n  getCurrentGenreId,\r\n  (state) => {\r\n    if (state !== null && state.selectedGenreId !== null) {\r\n      return state.entities[state.selectedGenreId]\r\n    }\r\n    return null;\r\n  }\r\n);\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CommentModel } from '../models/comment.model';\r\n\r\n@Injectable()\r\nexport class CommentService {\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) {\r\n  }\r\n\r\n  public loadComments(payload: string): Observable<CommentModel[]> {\r\n    return this.http\r\n      .get<CommentModel[]>(`/api/comment/book/${payload}`)\r\n      .pipe(map((data: CommentModel[]) => data));\r\n  }\r\n\r\n  public loadCommentById(payload: string): Observable<CommentModel> {\r\n    return this.http\r\n      .get<CommentModel>(`/api/comment/${payload}`)\r\n      .pipe(map((data: CommentModel) => data));\r\n  }\r\n\r\n  public createComment(payload: CommentModel): Observable<CommentModel> {\r\n    return this.http\r\n      .post<CommentModel>('/api/comment', payload)\r\n      .pipe(map((data: CommentModel) => data));\r\n  }\r\n\r\n  public updateComment(payload: CommentModel): Observable<CommentModel> {\r\n    return this.http\r\n      .put<CommentModel>(`/api/comment/${payload.id}`, payload)\r\n      .pipe(map((data: CommentModel) => data));\r\n  }\r\n\r\n  public deleteComment(payload: string) {\r\n    return this.http\r\n      .delete<string>(`/api/comment/${payload}`)\r\n      .pipe(map((data: string) => data));\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { NGXLogger } from 'ngx-logger';\nimport { MessageService } from 'primeng/api';\nimport { Observable, Subscription } from 'rxjs';\nimport { AuthorModel } from '../../models/author.model';\nimport * as authorStore from '../../store/author-store';\n\n@Component({\n  selector: 'app-authors-tab',\n  templateUrl: './authors-tab.component.html',\n  styleUrls: ['./authors-tab.component.css']\n})\nexport class AuthorsTabComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription = new Subscription();\n\n  public displayEditAuthorDialog = false;\n  public selectedAuthor: AuthorModel | null = null;\n  public tmpAuthor: AuthorModel | null = null;\n\n  public authors: AuthorModel[] = [];\n\n  public action: 'ADD' | 'EDIT' | null = null;\n  public delAction: 'delAuthor' | null = null;\n\n  constructor(\n    private authorStore$: Store<authorStore.AuthorStoreState.AuthorState>,\n    private messageService: MessageService,\n    private logger: NGXLogger,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.onError(\n      this.authorStore$.pipe(\n        select(authorStore.AuthorStoreSelectors.getError)\n      )\n    );\n    this.subscriptions.add(\n      this.authorStore$\n        .select(authorStore.AuthorStoreSelectors.getAuthors)\n        .subscribe((data) => {\n          this.authors = data;\n        })\n    );\n    this.authorStore$.dispatch(\n      new authorStore.AuthorStoreActions.LoadAuthors()\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  // ------------------------------------------------------------------------------\n  addAuthor() {\n    this.action = 'ADD';\n    this.tmpAuthor = null;\n    this.displayEditAuthorDialog = true;\n  }\n\n  editAuthor(author: AuthorModel) {\n    if (!author) {\n      this.action = 'ADD';\n    } else {\n      this.action = 'EDIT';\n    }\n    this.selectedAuthor = author;\n    this.tmpAuthor = author;\n    this.displayEditAuthorDialog = true;\n  }\n\n  saveAuthorChanges(author: AuthorModel) {\n    this.logger.info(`saveAuthorChanges: ${author}`);\n    if (this.action === 'ADD') {\n      this.authorStore$.dispatch(\n        new authorStore.AuthorStoreActions.CreateAuthor(author)\n      );\n    } else {\n      this.authorStore$.dispatch(\n        new authorStore.AuthorStoreActions.UpdateAuthor(author)\n      );\n    }\n  }\n\n  deleteAuthor(author: AuthorModel) {\n    this.tmpAuthor = author;\n    this.delAction = 'delAuthor';\n    this.messageService.clear();\n    this.messageService.add({\n      key: 'delConfirmDialog',\n      sticky: true,\n      severity: 'warn',\n      summary: 'Вы уверены?',\n      detail: 'Подтвердите удаление автора',\n    });\n  }\n\n  // ------------------------------------------------------------------------------\n  // Confirmation\n  onConfirm(action: string | null) {\n    if (this.tmpAuthor) {\n      this.authorStore$.dispatch(\n        new authorStore.AuthorStoreActions.DeleteAuthor(this.tmpAuthor.id)\n      );\n    }\n    this.messageService.clear('delConfirmDialog');\n  }\n\n  onReject() {\n    this.messageService.clear('delConfirmDialog');\n  }\n\n  onError(errorFlow$: Observable<any>) {\n    this.subscriptions.add(\n      errorFlow$.subscribe((err) => {\n        if (err && err.length > 0) {\n          this.messageService.add({\n            key: 'serviceError',\n            severity: 'error',\n            summary: 'Ошибка сервиса',\n            detail: err.toString(),\n            closable: true,\n          });\n        }\n      })\n    );\n  }\n}\n","<div class=\"author-table\">\n  <p-table [value]=\"authors\" dataKey=\"id\">\n    <ng-template pTemplate=\"caption\">\n      <div class=\"table-header\">\n        <div style=\"text-align: right\">\n          <p-button icon=\"pi pi-plus\" (onClick)=\"addAuthor()\"></p-button>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template pTemplate=\"header\">\n      <tr>\n        <th scope=\"col\" style=\"width: 5%\">ID</th>\n        <th scope=\"col\" style=\"width: 85%\">Author Name</th>\n        <th scope=\"col\" style=\"width: 10%\">Manage</th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-author>\n      <tr>\n        <td>{{author.id}}</td>\n        <td>{{author.name}}</td>\n        <td style=\"text-align: center; display: flex\">\n          <p-button class=\"table-button\" icon=\"pi pi-ellipsis-h\" (onClick)=\"editAuthor(author)\"></p-button>\n          <p-button class=\"table-button\" icon=\"pi pi-times\" (onClick)=\"deleteAuthor(author)\"></p-button>\n        </td>\n      </tr>\n    </ng-template>\n  </p-table>\n</div>\n\n<app-author-edit\n  [(display)]=\"displayEditAuthorDialog\"\n  [(author)]=\"tmpAuthor\"\n  (authorChange)=\"saveAuthorChanges($event)\">\n</app-author-edit>\n\n<p-toast position=\"center\" key=\"delConfirmDialog\" (onClose)=\"onReject()\" [baseZIndex]=\"5000\">\n  <ng-template let-message pTemplate=\"message\">\n    <div class=\"p-flex p-flex-column\" style=\"flex: 1\">\n      <div style=\"text-align: center\">\n        <em class=\"pi pi-exclamation-triangle\" style=\"font-size: 3em\"></em>\n        <h3>{{message.summary}}</h3>\n        <p>{{message.detail}}</p>\n      </div>\n      <div class=\"p-grid p-fluid\">\n        <div class=\"p-col-6\">\n          <button type=\"button\" pButton (click)=\"onConfirm(delAction)\" label=\"Да\" class=\"p-button-success\"></button>\n        </div>\n        <div class=\"p-col-6\">\n          <button type=\"button\" pButton (click)=\"onReject()\" label=\"Нет\" class=\"p-button-secondary\"></button>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</p-toast>\n\n<p-toast class=\"error-toast\" position=\"center\" key=\"serviceError\" [baseZIndex]=\"5000\"\n         preventOpenDuplicates=\"true\"></p-toast>\n","import * as bookActions from './actions';\r\nimport { bookAdapter, BookState, initialBookState } from './state';\r\n\r\nexport function bookReducer(\r\n  state = initialBookState,\r\n  action: bookActions.Actions\r\n): BookState {\r\n  switch (action.type) {\r\n    case bookActions.BookActionTypes.LOAD_BOOKS_SUCCESS: {\r\n      return bookAdapter.setAll(action.payload, {\r\n        ...state,\r\n        loading: false,\r\n        loaded: true,\r\n      });\r\n    }\r\n    case bookActions.BookActionTypes.LOAD_BOOKS_FAIL: {\r\n      return {\r\n        ...state,\r\n        entities: {},\r\n        loading: false,\r\n        loaded: false,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case bookActions.BookActionTypes.LOAD_BOOKS_LIKE_NAME_SUCCESS: {\r\n      return bookAdapter.setAll(action.payload, {\r\n        ...state,\r\n        loading: false,\r\n        loaded: true,\r\n      });\r\n    }\r\n    case bookActions.BookActionTypes.LOAD_BOOKS_LIKE_NAME_FAIL: {\r\n      return {\r\n        ...state,\r\n        entities: {},\r\n        loading: false,\r\n        loaded: false,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case bookActions.BookActionTypes.LOAD_BOOK_SUCCESS: {\r\n      return bookAdapter.addOne(action.payload, {\r\n        ...state,\r\n        selectedBookId: action.payload.id,\r\n      });\r\n    }\r\n    case bookActions.BookActionTypes.LOAD_BOOK_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case bookActions.BookActionTypes.CREATE_BOOK_SUCCESS: {\r\n      return bookAdapter.addOne(action.payload, state);\r\n    }\r\n    case bookActions.BookActionTypes.CREATE_BOOK_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case bookActions.BookActionTypes.UPDATE_BOOK_SUCCESS: {\r\n      return bookAdapter.updateOne(action.payload, state);\r\n    }\r\n    case bookActions.BookActionTypes.UPDATE_BOOK_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n\r\n    case bookActions.BookActionTypes.DELETE_BOOK_SUCCESS: {\r\n      return bookAdapter.removeOne(action.payload, state);\r\n    }\r\n    case bookActions.BookActionTypes.DELETE_BOOK_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import * as commentActions from './actions';\r\nimport { CommentState, commentAdapter, initialCommentState } from './state';\r\n\r\nexport function commentReducer(\r\n  state = initialCommentState,\r\n  action: commentActions.Actions\r\n): CommentState {\r\n  switch (action.type) {\r\n    case commentActions.CommentActionTypes.LOAD_COMMENTS_BY_BOOK_ID_SUCCESS: {\r\n      return commentAdapter.setAll(action.payload, {\r\n        ...state,\r\n        loading: false,\r\n        loaded: true,\r\n      });\r\n    }\r\n    case commentActions.CommentActionTypes.LOAD_COMMENTS_BY_BOOK_ID_FAIL: {\r\n      return {\r\n        ...state,\r\n        entities: {},\r\n        loading: false,\r\n        loaded: false,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case commentActions.CommentActionTypes.LOAD_COMMENT_SUCCESS: {\r\n      return commentAdapter.addOne(action.payload, {\r\n        ...state,\r\n        selectedCommentId: action.payload.id,\r\n      });\r\n    }\r\n    case commentActions.CommentActionTypes.LOAD_COMMENT_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case commentActions.CommentActionTypes.CREATE_COMMENT_SUCCESS: {\r\n      return commentAdapter.addOne(action.payload, state);\r\n    }\r\n    case commentActions.CommentActionTypes.CREATE_COMMENT_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case commentActions.CommentActionTypes.UPDATE_COMMENT_SUCCESS: {\r\n      return commentAdapter.updateOne(action.payload, state);\r\n    }\r\n    case commentActions.CommentActionTypes.UPDATE_COMMENT_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n\r\n    case commentActions.CommentActionTypes.DELETE_COMMENT_SUCCESS: {\r\n      return commentAdapter.removeOne(action.payload, state);\r\n    }\r\n    case commentActions.CommentActionTypes.DELETE_COMMENT_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BooksViewComponent } from './components/books-view/books-view.component';\r\nimport { HomePageComponent } from './components/home-page/home-page.component';\r\nimport { ManagePageComponent } from './components/manage-page/manage-page.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomePageComponent},\r\n  {path: 'books-view', component: BooksViewComponent},\r\n  {path: 'manage', component: ManagePageComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import * as BookStoreActions from './actions';\r\nimport * as BookStoreSelectors from './selectors';\r\nimport * as BookStoreState from './state';\r\n\r\nexport { BookStoreModule } from './book-store.module';\r\n\r\nexport { BookStoreActions, BookStoreSelectors, BookStoreState };\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, mergeMap } from 'rxjs/operators';\r\nimport { AuthorModel } from '../../models/author.model';\r\n\r\nimport { AuthorService } from '../../services/author.service';\r\nimport * as authorActions from './actions';\r\n\r\n@Injectable()\r\nexport class AuthorEffect {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private authorService: AuthorService\r\n  ) {\r\n  }\r\n\r\n  @Effect()\r\n  loadAuthors$: Observable<Action> = this.actions$.pipe(\r\n    ofType<authorActions.LoadAuthors>(\r\n      authorActions.AuthorActionTypes.LOAD_AUTHORS\r\n    ),\r\n    mergeMap((action: authorActions.LoadAuthors) =>\r\n      this.authorService.loadAuthors().pipe(\r\n        map(\r\n          (authors: AuthorModel[]) =>\r\n            new authorActions.LoadAuthorsSuccess(authors)\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new authorActions.LoadAuthorsFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  loadAuthor$: Observable<Action> = this.actions$.pipe(\r\n    ofType<authorActions.LoadAuthor>(\r\n      authorActions.AuthorActionTypes.LOAD_AUTHOR\r\n    ),\r\n    mergeMap((action: authorActions.LoadAuthor) =>\r\n      this.authorService.loadAuthorById(action.payload).pipe(\r\n        map(\r\n          (author: AuthorModel) =>\r\n            new authorActions.LoadAuthorSuccess(author)\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new authorActions.LoadAuthorFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  createAuthor$: Observable<Action> = this.actions$.pipe(\r\n    ofType<authorActions.CreateAuthor>(\r\n      authorActions.AuthorActionTypes.CREATE_AUTHOR\r\n    ),\r\n    map((action: authorActions.CreateAuthor) => action.payload),\r\n    mergeMap((author: AuthorModel) =>\r\n      this.authorService.createAuthor(author).pipe(\r\n        map(\r\n          (newAuthor: AuthorModel) =>\r\n            new authorActions.CreateAuthorSuccess(newAuthor)\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new authorActions.CreateAuthorFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  updateAuthor$: Observable<Action> = this.actions$.pipe(\r\n    ofType<authorActions.UpdateAuthor>(\r\n      authorActions.AuthorActionTypes.UPDATE_AUTHOR\r\n    ),\r\n    map((action: authorActions.UpdateAuthor) => action.payload),\r\n    mergeMap((author: AuthorModel) =>\r\n      this.authorService.updateAuthor(author).pipe(\r\n        map(\r\n          (updateAuthor: AuthorModel) =>\r\n            new authorActions.UpdateAuthorSuccess({\r\n              id: updateAuthor.id,\r\n              changes: updateAuthor,\r\n            })\r\n        ),\r\n        catchError((err) =>\r\n          of(\r\n            new authorActions.UpdateAuthorFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  deleteAuthor$: Observable<Action> = this.actions$.pipe(\r\n    ofType<authorActions.DeleteAuthor>(\r\n      authorActions.AuthorActionTypes.DELETE_AUTHOR\r\n    ),\r\n    map((action: authorActions.DeleteAuthor) => action.payload),\r\n    mergeMap((id: string) =>\r\n      this.authorService.deleteAuthor(id).pipe(\r\n        map(() => new authorActions.DeleteAuthorSuccess(id)),\r\n        catchError((err) =>\r\n          of(\r\n            new authorActions.DeleteAuthorFail(\r\n              `${new Date()}\\n${JSON.stringify(err)}`\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-books-view',\n  templateUrl: './books-view.component.html',\n  styleUrls: ['./books-view.component.css']\n})\nexport class BooksViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>books-view works!</p>\n","import * as GenreStoreActions from './actions';\r\nimport * as GenreStoreSelectors from './selectors';\r\nimport * as GenreStoreState from './state';\r\n\r\nexport { GenreStoreModule } from './genre-store.module';\r\n\r\nexport { GenreStoreActions, GenreStoreSelectors, GenreStoreState };\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}